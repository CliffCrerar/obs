/*! obs 0.6.0 Copyright (c) 2013 Alan Plum. MIT licensed. */function lazyComputed(){function t(){if(!arguments.length)return t._previousValue=t._currentValue,e&&(t._currentValue=t.read(),e=!1,t.notify()),t._currentValue;if(typeof t.write!="function")throw new Error("This observable is read-only!");t.write.apply(t,arguments)}var e=!0;return aug(t,{_initialValue:undefined,_onNotify:function(){e=!0}})}function eagerComputed(e){function t(){if(!arguments.length)return t._currentValue;if(typeof t.write!="function")throw new Error("This observable is read-only!");t.write.apply(t,arguments)}return aug(t,{_initialValue:e.apply(t),_onNotify:function(){t._previousValue=t._currentValue,t._currentValue=t.read(),t.notify()}})}function writeOnlyComputed(){function e(){if(!arguments.length)throw new Error("This observable is write-only!");e.write.apply(e,arguments)}return e._initialValue=undefined,e}var aug=require("aug"),PubSub=require("sublish").PubSub,slice=Array.prototype.slice,isArray=Array.isArray?Array.isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},contains=Array.prototype.indexOf?function(e,t){return!!~e.indexOf(t)}:function(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return!0;return!1};exports.prop=aug(function(e){function t(e){if(!arguments.length)return t._currentValue;t._previousValue=t._currentValue,t._currentValue=e,t.notify()}return aug(t,PubSub.prototype,{_initialValue:e,_currentValue:e,dirty:!1},exports.prop.fn),PubSub.apply(t),t},{readOnly:function(e){function t(){if(arguments.length)throw new Error("This observable is read-only!");return t._currentValue}return aug(t,PubSub.prototype,{_initialValue:e,_currentValue:e,dirty:!1},exports.prop.fn),PubSub.apply(t),t},fn:{__is_obs__:!0,notify:function(){this.dirty=this._currentValue===this._initialValue,this.publish(this._currentValue,this._previousValue)},peek:function(){return this._currentValue},reset:function(){this(this._initialValue)}}}),exports.computed=aug(function(e,t,n){var r=!1;arguments.length===1&&typeof e=="object"?(t=e.write,n=e.watched,r=e.lazy,e=e.read,n&&!isArray(n)&&(n=[n])):arguments.length===2&&isArray(t)&&(n=t,t=undefined);if(!e&&!t)throw new Error("No read function and no write function provided!");var i=e?(r?lazyComputed:eagerComputed)(e,t):writeOnlyComputed(t);return aug(i,PubSub.prototype,{_currentValue:i._initialValue,read:e,write:t,dirty:!1,_subscriptions:[]},exports.computed.fn),PubSub.apply(i),e&&isArray(n)&&i.watch.apply(i,n),i},{lazy:function(e,t,n){return arguments.length===1&&typeof e=="object"?exports.computed(aug({lazy:!0},e)):(arguments.length===2&&isArray(t)&&(n=t,t=undefined),exports.computed({read:e,write:t,watched:n,lazy:!0}))},fn:aug({},exports.prop.fn,{watch:function(){var e=slice.call(arguments,0),t,n;for(n=0;n<e.length;n++){t=e[n];if(contains(this._subscriptions,t))continue;t&&typeof t.subscribe=="function"&&(t.subscribe(this._onNotify),this._subscriptions.push(t))}return this},unwatch:function(){var e=slice.call(arguments,0),t=this._subscriptions,n,r;for(n=0;n<e.length;n++)r=e[n],r&&typeof r.unsubscribe=="function"&&r.unsubscribe(this._onNotify);this._subscriptions=[];for(n=0;n<t.length;n++)r=t[n],contains(e,r)||this._subscriptions.push(r);return this},dismiss:function(){this.unwatch.apply(this,this._subscriptions)}})});