/**!
* obs.js 0.2.2 Minimalist observable properties.
* Copyright (c) 2012 Alan Plum
* Licensed under the MIT license.
**/(function(e,t){typeof exports=="object"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):t(e.obs={})})(this,function(e){function t(){this._subscribers=[],this.subscribe=function(e){this._subscribers.push(e)},this.unsubscribe=function(e){var t=this._subscribers.indexOf(e);return t===-1?!1:(this._subscribers.splice(t,1),!0)},this.publish=function(e){this._subscribers.forEach(function(t){t(e)})}}function n(e){var t=Array.prototype.slice.call(arguments,1);return t.forEach(function(t){Object.keys(t).forEach(function(n){e[n]=t[n]})}),e}e.util={PubSub:t,extend:n},e.prop=n(function(r){function s(){if(!arguments.length)return i;i=arguments[0],s.publish(i)}var i=r;return t.call(s),n(s,e.prop.fn),s},{fn:{__is_obs__:!0}}),e.computed=n(function(r,i,s){Array.isArray(i)||(i=[i]);var o,u,a;if(s===!0){var f=!0;o=void 0,u=function(){f=!0},a=function(){return f&&(o=r(),f=!1,a.publish(o)),o}}else o=r(),u=function(){o=r(),a.publish(o)},a=function(){return o};return a.dismiss=function(){i.forEach(function(e){e&&typeof e.unsubscribe=="function"&&e.unsubscribe(u)})},a.peek=function(){return o},t.call(a),n(a,e.computed.fn),i.forEach(function(e){e&&typeof e.subscribe=="function"&&e.subscribe(u)}),a},{fn:{__is_obs__:!0}})});